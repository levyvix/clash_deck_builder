# =============================================================================
# CLASH ROYALE DECK BUILDER - ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to create your environment-specific configuration:
# - .env.local (for local development)
# - .env.docker (for containerized development)
# - .env (for production deployment)
#
# SECURITY WARNING: Never commit actual .env files to version control!
# =============================================================================

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# MySQL database connection settings
DB_ROOT_PASSWORD=your_secure_root_password_here
DB_NAME=clash_deck_builder
DB_USER=clash_user
DB_PASSWORD=your_secure_user_password_here
DB_HOST=localhost
DB_PORT=3306

# -----------------------------------------------------------------------------
# APPLICATION CONFIGURATION
# -----------------------------------------------------------------------------
# Clash Royale API key - Get from https://developer.clashroyale.com/
CLASH_ROYALE_API_KEY=your_clash_royale_api_key_here

# Application debug mode (true/false)
DEBUG=false

# Logging level (debug, info, warning, error, critical)
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# CORS CONFIGURATION
# -----------------------------------------------------------------------------
# Allowed origins for CORS (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# -----------------------------------------------------------------------------
# DEPLOYMENT CONFIGURATION
# -----------------------------------------------------------------------------
# Environment type (development, docker, production)
ENVIRONMENT=production

# Backend server host and port
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000

# -----------------------------------------------------------------------------
# GOOGLE OAUTH CONFIGURATION
# -----------------------------------------------------------------------------
# Google OAuth 2.0 credentials for user authentication
# Get these from Google Cloud Console: https://console.cloud.google.com/
# 1. Create a new project or select existing project
# 2. Enable Google Identity Services API
# 3. Configure OAuth consent screen (External user type)
# 4. Create OAuth 2.0 Client ID credentials (Web application)
# 5. Configure authorized JavaScript origins:
#    - http://localhost:3000 (development frontend)
#    - http://localhost:8000 (development backend)
#    - Add your production domain when ready
# 6. Configure authorized redirect URIs:
#    - http://localhost:3000/auth/callback (development)
#    - Add production callback URL when ready
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# -----------------------------------------------------------------------------
# SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# JWT secret key for authentication (generate a secure random string)
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Session timeout in minutes
SESSION_TIMEOUT=60

# -----------------------------------------------------------------------------
# PERFORMANCE CONFIGURATION
# -----------------------------------------------------------------------------
# Database connection pool size
DB_POOL_SIZE=10

# API rate limiting (requests per minute)
API_RATE_LIMIT=100

# Cache TTL in seconds
CACHE_TTL=3600