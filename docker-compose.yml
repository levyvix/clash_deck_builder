version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: clash-db
    env_file:
      - .env.docker
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - clash-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clash-backend
    env_file:
      - .env.docker
    environment:
      DATABASE_URL: mysql+pymysql://${DB_USER}:${DB_PASSWORD}@database:3306/${DB_NAME}
      CLASH_ROYALE_API_KEY: ${CLASH_ROYALE_API_KEY}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CORS_ORIGINS: ${CORS_ORIGINS}
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      # Migration settings
      MIGRATION_TIMEOUT: 300
      MIGRATION_LOG_LEVEL: info
      MIGRATION_RETRY_COUNT: 3
      MIGRATION_RETRY_DELAY: 5
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - clash-network
    volumes:
      - ./backend/src:/app/src
      - ./backend/logs:/app/logs
      - ./all_cards.json:/all_cards.json:ro
      - migration_logs:/app/database/migrations/logs
    command: uv run uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/usr/local/bin/health_check.py"]
      timeout: 30s
      retries: 3
      interval: 30s
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: clash-frontend
    env_file:
      - .env.docker
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8000
      REACT_APP_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - clash-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  migration_logs:
    driver: local

networks:
  clash-network:
    driver: bridge