name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/your-username/clash-royale-deck-builder
  DOCKER_TAG: ${{ github.sha }}
  DATABASE_URL: mysql+pymysql://test:test@localhost:3306/test_db
  TEST_DATABASE_URL: mysql+pymysql://test:test@localhost:3306/test_db

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: |
        pip install uv

    - name: Install dependencies
      run: |
        uv sync
    
    - name: Run tests
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        TEST_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
      run: |
        uv run pytest -v --cov=./ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true

  build-and-push:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
    
    - name: Deploy to production
      if: github.ref == 'refs/heads/main'
      run: |
        # Add your deployment commands here
        echo "Deploying to production..."
        # Example: ssh user@server "docker-compose pull && docker-compose up -d"
